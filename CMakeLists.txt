cmake_minimum_required (VERSION 3.16)

project (pygmalion-core)

set (pygmalion_VERSION_MAJOR 1)
set (pygmalion_VERSION_MINOR 0)

include(CheckCXXCompilerFlag)

    option(OPTIMIZE_FOR_BMI2 "Build with BMI2 intrinsics" ON)

if(MSVC)
    option(OPTIMIZE_FOR_AVX512 "Build with /arch:AVX512" OFF)
    option(OPTIMIZE_FOR_AVX2 "Build with /arch:AVX2" OFF)
    option(OPTIMIZE_FOR_AVX "Build with /arch:AVX" OFF)

    if(OPTIMIZE_FOR_BMI2)
    add_definitions(-DPYGMALION_CPU_BMI2)
    endif()

    if(OPTIMIZE_FOR_AVX512)
        CHECK_CXX_COMPILER_FLAG("/arch:AVX512" COMPILER_SUPPORTS_ARCH_AVX512)
        if(COMPILER_SUPPORTS_ARCH_AVX512 )
            message("-- building with /arch:AVX512")
            set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX512")
        else()
            message("-- NOT building with /arch:AVX512")
        endif()
    else()
        if(OPTIMIZE_FOR_AVX2)
            CHECK_CXX_COMPILER_FLAG("/arch:AVX2" COMPILER_SUPPORTS_ARCH_AVX2)
            if(COMPILER_SUPPORTS_ARCH_AVX2 )
                message("-- building with /arch:AVX2")
                set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX2")
            else()
                message("-- NOT building with /arch:AVX2")
            endif()
        else()
            if(OPTIMIZE_FOR_AVX)
                CHECK_CXX_COMPILER_FLAG("/arch:AVX" COMPILER_SUPPORTS_ARCH_AVX)
                if(COMPILER_SUPPORTS_ARCH_AVX )
                    message("-- building with /arch:AVX")
                    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /arch:AVX")
                else()
                    message("-- NOT building with /arch:AVX")
                endif()
            endif()
        endif()
    endif()
endif()
if(OPTIMIZE_FOR_BMI2)
    message("-- trying to build with -mbmi2")
    CHECK_CXX_COMPILER_FLAG("-mbmi2" COMPILER_SUPPORTS_MBMI2)
    if(COMPILER_SUPPORTS_MBMI2)
        message("-- building with -mbmi2")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mbmi2")
    else()
        message("-- NOT building with -mbmi2")
    endif()
endif()

option(OPTIMIZE_FOR_NATIVE "Build with -march=native" OFF)

if(OPTIMIZE_FOR_NATIVE)
    message("-- trying to build with -march=native")
    CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_SUPPORTS_MARCH_NATIVE)
    if(COMPILER_SUPPORTS_MARCH_NATIVE)
        message("-- building with -march=native")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -march=native")
    else()
        message("-- NOT building with -march=native")
    endif()
    message("-- trying to build with -flto")
    CHECK_CXX_COMPILER_FLAG("-flto" COMPILER_SUPPORTS_FLTO)
    if(COMPILER_SUPPORTS_FLTO)
        message("-- building with -flto")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -flto")
    else()
        message("-- NOT building with -flto")
    endif()
endif()

add_subdirectory(pygmalion-core)
add_subdirectory(pygmalion-tictactoe)
add_subdirectory(pygmalion-chess)
